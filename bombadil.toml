# Path to your dotfiles relative to your $HOME directory
dotfiles_dir = "Git/Github/Dotfiles/profiles"
gpg_user_id = "rog32@hi.is"

##########
# Common #
##########
[settings]
# An array of toml files paths containing the variables to inject in your templatize dotfiles
# You can have multiple var files as long as variable names does not colide. 
vars = [ "common/vars.toml" ]
# An array of post install shell commands
hooks = ["bash -c \"chmod 600 ~/.ssh/config\""]
[settings.dots]
# A dot entry representing a symlink, `source` is relative to `dotfiles_dir` 
# and `target` shall be relative to $HOME directory or absolute.
 
# Shells #
# POSIX
posix_bombadil = { source = "common/shell/posix/00_bombadil_vars.sh", target = ".config/shellrc/shell.d/00_bombadil_vars.sh" }
posix_alias = { source = "common/shell/posix/01_alias_def.sh", target = ".config/shellrc/shell.d/01_alias_def.sh" }
posix_func = { source = "common/shell/posix/02_func_def.sh", target = ".config/shellrc/shell.d/02_func_def.sh" }
posix_exports = { source = "common/shell/posix/03_exports.sh", target = ".config/shellrc/shell.d/03_exports.sh" }
posix_sources = { source = "common/shell/posix/04_sources.sh", target = ".config/shellrc/shell.d/04_sources.sh" }
posix_paths = { source = "common/shell/posix/05_paths.sh", target = ".config/shellrc/shell.d/05_paths.sh" }
posix_prog_conf = { source = "common/shell/posix/06_prog_conf.sh", target = ".config/shellrc/shell.d/06_prog_conf.sh" }
posix_warn = { source = "common/shell/posix/99_warnings.sh", target = ".config/shellrc/shell.d/99_warnings.sh" }
# Base Shell
shellrc = { source = "common/shell/shellrc.sh", target = ".shellrc" }
# Zsh
zshrc = { source = "common/shell/zshrc.zsh", target = ".zshrc" }
zshenv = { source = "common/shell/zsh/zshenv.zsh", target = ".zshenv" }
zsh_keys = { source = "common/shell/zsh/01_keys.zsh", target = ".config/shellrc/zsh.d/01_keys.zsh" }
zsh_func = { source = "common/shell/zsh/02_func_def.zsh", target = ".config/shellrc/zsh.d/02_func_def.zsh" }
zsh_plugins = { source = "common/shell/zsh/03_plugins.zsh", target = ".config/shellrc/zsh.d/03_plugins.zsh" }
zsh_sources = { source = "common/shell/zsh/04_sources.zsh", target = ".config/shellrc/zsh.d/04_sources.zsh" }
zsh_theme = { source = "common/shell/zsh/04a_theme.zsh", target = ".config/shellrc/zsh.d/04a_theme.zsh" }
zsh_activate_bin = { source = "common/shell/zsh/99_activate_bin.zsh", target = ".config/shellrc/zsh.d/99_activate_bin.zsh" }
# Bash
bashrc =  { source = "common/shell/bashrc.bash", target = ".bashrc" }
bash_activate_bin = { source = "common/shell/bash/99_activate_bin.bash", target = ".config/shellrc/bash.d/99_activate_bin.bash" }
bash_mamba = { source = "common/shell/bash/01_mamba.bash", target = ".config/shellrc/bash.d/01_mamba.bash" }
bash_nvm = { source = "common/shell/bash/02_nvm.bash", target = ".config/shellrc/bash.d/02_nvm.bash" }
bash_nix = { source = "common/shell/bash/03_locale_nix.bash", target = ".config/shellrc/bash.d/03_locale_nix.bash" }
# Git #
git_config = { source = "common/git/config", target = ".gitconfig" }
# Alacritty #
alacritty = { source = "common/.config/alacritty/alacritty.yml", target = ".config/alacritty/alacritty.yml" }
# Neovim #
vimrc = { source = "common/.vimrc", target = ".vimrc" }
neovim = { source = "common/.config/nvim/init.vim", target = ".config/nvim/init.vim" }
# Tmux #
tmuxconf =  { source = "common/shell/tmux/.tmux.conf", target = ".tmux.conf" }
# ssh #
sshconf =  { source = "common/ssh/config", target = ".ssh/config" }
# file manager #
# Ranger + Pistol
rangerrc =  { source = "common/.config/ranger/myranger.cfg", target = ".config/ranger/rc.cfg" }
riflerrc =  { source = "common/.config/ranger/rifle.cfg", target = ".config/ranger/rifle.cfg" }
pistolrrc =  { source = "common/.config/pistol/pistol.conf", target = ".config/pistol/pistol.conf" }

# LaTeX
latexmkrrc =  { source = "common/.latexmkrc", target = ".latexmkrc" }

# Zathura
zathurarc = { source = "common/.config/zathura/zathurarc", target = ".config/zathura/zathurarc" }
zathuratheme = { source = "common/.config/zathura/zathuraThemerc", target = ".config/zathura/zathuraThemerc" }

# Browsers #
# tridactyl
tridactylrc = { source = "common/browsers/firefox/tridactyl/tridactylrc", target = ".config/tridactyl/tridactylrc" }
tridactylodark = { source = "common/browsers/firefox/tridactyl/base16-onedark.css", target = ".config/tridactyl/themes/base16-onedark.css" }

#########
# MacOS #
#########
[profiles.macos]
vars = [ "macOS/mac-vars.toml" ]
hooks = [ "echo \"Welcome to the MacOS configuration\"", "skhd -r" ]
[profiles.macos.dots]
yabairc = { source = "macOS/tilingWM/yabairc", target = ".config/yabai/yabairc" }
spacebarrc = { source = "macOS/tilingWM/spacebarrc", target = ".config/spacebar/spacebarrc" }
skhdrc = { source = "macOS/tilingWM/skhdrc", target = ".config/skhd/skhdrc" }
# Nix
nix_darwin = { source = "macOS/nix-darwin/darwin-conf.nix", target=".nixpkgs/darwin-configuration.nix" }
# Niv for overlays
nxo_niv_json = { source = "macOS/nix-darwin/overlays/nix/sources.json", target=".nixpkgs/overlays/nix/sources.json" }
nxo_niv_nix = { source = "macOS/nix-darwin/overlays/nix/sources.nix", target=".nixpkgs/overlays/nix/sources.nix" }
nxo_default = { source = "macOS/nix-darwin/overlays/default.nix", target=".nixpkgs/overlays/default.nix" }
# Emacs 28 with Native Completion
nxo_emacs = { source = "macOS/nix-darwin/overlays/emacs-native.nix", target=".nixpkgs/overlays/emacs-native.nix" }

# Laptop
[profiles.rgmacbook]
vars = [ "macOS/mac-vars.toml", "macOS/rgmacbook/laptop.toml" ]
[profiles.rgmacbook.dots]
rgmacbook_nixconf = { source = "macOS/rgmacbook/nix/mac_laptop.nix", target = ".config/nixpkgs/config.nix" }
rgmacbook_karabiner_hc = { source = "macOS/rgmacbook/keyboard/karabiner/hyper_caps.json", target = ".config/karabiner/assets/complex_modifications/hyper_caps.json" }
rgmacbook_hs_init = { source = "macOS/rgmacbook/hammerspoon/init.lua", target = ".hammerspoon/init.lua" }
rgmacbook_spotifyd_init = { source = "macOS/rgmacbook/spotifyd/spotifyd.conf", target = ".config/spotifyd/spotifyd.conf" }
rgmacbook_script_alerter = { source = "macOS/rgmacbook/scripts/spotinotify.sh", target = ".local/bin/spotinotify.sh" }


###########
# Colemak #
###########
[profiles.colemak]
vars = ["colemak/common.toml"]
[profiles.colemak.dots]
zathura_colemak = { source = "colemak/zathuraKeys", target = ".config/zathura/zathuraColemak" }
# colemak for macos #
[profiles.colemac]
vars = [ "macOS/colemac/colemac-vars.toml" ]
[profiles.colemac.dots]
mailmate = { source = "macOS/colemac/mailmate/colemak_vim.json", target = "Library/Application Support/MailMate/Resources/KeyBindings/ColemakVim.plist" }

#########
# Linux #
#########
[profiles.linux]
vars = ["linux/linux-vars.toml"]
[profiles.linux.dots]
termiti = { source = "linux/.config/termite/alacritty.yml", target = ".config/alacritty/alacritty.yml" }

# ArchLinux #
[profiles.archlinux]
vars = ["archlinux/archlinux-vars.toml"]
[profiles.archlinux.dots]
archlinux_warn = { source = "archlinux/shell/posix/07_00_warnings.sh", target = ".config/shellrc/shell.d/07_00_warnings.sh" }
archlinux_alias = { source = "archlinux/shell/posix/07_01_alias_def.sh", target = ".config/shellrc/shell.d/07_01_alias_def.sh" }
archlinux_func = { source = "archlinux/shell/posix/07_02_func_def.sh", target = ".config/shellrc/shell.d/07_02_func_def.sh" }
archlinux_exports = { source = "archlinux/shell/posix/07_03_exports.sh", target = ".config/shellrc/shell.d/07_03_exports.sh" }
archlinux_sources = { source = "archlinux/shell/posix/07_04_sources.sh", target = ".config/shellrc/shell.d/07_04_sources.sh" }
archlinux_paths = { source = "archlinux/shell/posix/07_05_paths.sh", target = ".config/shellrc/shell.d/07_05_paths.sh" }
archlinux_prog_conf = { source = "archlinux/shell/posix/07_06_prog_conf.sh", target = ".config/shellrc/shell.d/07_06_prog_conf.sh" }

#######
# HPC #
#######
[profiles.hpc]
vars = ["hpc/hpc-vars.toml"]
[profiles.hpc.dots]
# Conda / Mamba
condarc = { source = "hpc/conda/.condarc", target = ".condarc" }
# Spack
spack_modules = { source = "hpc/spack/modules.yml", target = ".spack/modules.yaml" }
# spack_compilers = { source = "hpc/spack/compilers.yml", target = ".spack/linux/compilers.yaml" }
spack_interactive = { source = "hpc/spack/envs/interactive.yml", target = "spack/var/spack/environments/interactive/spack.yaml" }

# Submodules #
[profiles.elja]
vars = ["hpc/machines/ihpc.toml", "hpc/machines/elja/elja.toml"]
[profiles.elja.dots]
elja_nix = { source = "hpc/machines/elja/nix/elja_conf.nix", target = ".config/nixpkgs/config.nix" }

# Vars only
[profiles.garpur]
vars = ["hpc/machines/ihpc.toml", "hpc/machines/garpur.toml"]
