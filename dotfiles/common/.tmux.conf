# tmux Powerline
#	set-option -g status on
#	set-option -g status-interval 2
#	set-option -g status-utf8 on
#	set-option -g status-justify "left"
#	set-option -g status-left-length 60
#	set-option -g status-right-length 90
#	set-option -g status-left "#(~/Github/Linux/Tmux/tmux-powerline/powerline.sh left)"
#	set-option -g status-right "#(~/Github/Linux/Tmux/tmux-powerline/powerline.sh right)"

	# Window Powerline
#	set-window-option -g window-status-current-format "#[fg=colour235, bg=colour27]⮀#[fg=colour255, bg=colour27] #I ⮁ #W #[fg=colour27, bg=colour235]⮀"
#
#	#Mute Statusbars
#	# Left
#	bind C-[ run '~/Github/Linux/Tmux/tmux-powerline/mute_powerline.sh left'
#	# Right
#	bind C-] run '~/Github/Linux/Tmux/tmux-powerline/mute_powerline.sh right'    


# Tmuxline Stuff
source-file ~/.tmuxlinesource

# Powerline
# source /usr/lib/python3.4/site-packages/powerline/bindings/tmux/powerline.conf

	# Styles
# improve colors
set -g default-terminal "screen-256color"

# soften status bar color from harsh green to light gray
set -g status-bg '#3B3B3B'
set -g status-fg '#3B3B3B'


# Start numbering at 1
set -g base-index 1

# Allows for faster key repetition
set -s escape-time 0


# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Activity monitoring
#setw -g monitor-activity on
#set -g visual-activity on

# Highlight active window
set-window-option -g window-status-current-bg black

# Make mouse useful in copy mode
# setw -g mode-mouse on
#
# # Allow mouse to select which pane to use
# set -g mouse-select-pane on
#
# # Allow mouse dragging to resize panes
# set -g mouse-resize-pane on
#
# # Allow mouse to select windows
 #set -g mouse-select-window on
#
# # Allow xterm titles in terminal window, terminal scrolling with scrollbar, and setting overrides of C-Up, C-Down, C-Left, C-Right
# # (commented out because it disables cursor navigation in vim)
# #set -g terminal-overrides "xterm*:XT:smcup@:rmcup@:kUP5=\eOA:kDN5=\eOB:kLFT5=\eOD:kRIT5=\eOC"
#
# # Scroll History
 set -g history-limit 3000000
#
# # Set ability to capture on start and restore on exit window data when running an application
 setw -g alternate-screen on
#
# # Lower escape timing from 500ms to 50ms for quicker response to scroll-buffer access.
 set -s escape-time 50
#
# Keybind preference
setw -g mode-keys vi
set-option -g status-keys vi
 set -g mouse-utf8 on
 set -g mouse obind-key -T root PPage if-shell -F "#{alternate_on}" "send-keys PPage" "copy-mode -e; send-keys PPage"
bind-key -t vi-copy PPage page-up
bind-key -t vi-copy NPage page-down
# Moving between panes with vim movement keys
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R


# Smart pane switching with awareness of vim splits
 is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
 bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
 bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
 bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
 bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
 bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"



# Activate inner-most session (when nesting tmux) to send commands
bind a send-prefix


# Automatically set window title
setw -g automatic-rename
