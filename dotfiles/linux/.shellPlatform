###########################
# Linux platform defaults #
###########################

# Sublime Text
################

if command -v subl >/dev/null 2>&1; then
  if [[ ! -a "$HOME/.config/sublime-text-3/Packages/User/Package Control.sublime-settings" ]]; then
    if command -v aria2c >/dev/null 2>&1; then
      aria2c -j2 "https://packagecontrol.io/Package%20Control.sublime-package" -d=$HOME/.config/sublime-text-3/Packages/User/
    elif command -v wget >/dev/null 2>&1; then
      wget --trust-server-names -v -c "https://packagecontrol.io/Package%20Control.sublime-package" -P $HOME/.config/sublime-text-3/Packages/User/
    else
      ( cd $HOME/.config/sublime-text-3/Packages/User/; curl -L -J -O "https://packagecontrol.io/Package%20Control.sublime-package" --progress-bar)
    fi
  fi
fi


function getBrew() {
  if command -v brew >/dev/null 2>&1; then
    echo | sh -c "$(curl -fsSL https://raw.githubusercontent.com/Linuxbrew/install/master/install.sh)"
  fi
}


# Commands
###########

if [[ -d $HOME/.virtualenvs ]]; then
  export WORKON_HOME=~/.virtualenvs
  source $(which virtualenvwrapper_lazy.sh)
else
  echo "You seem to be missing virtualenvs"
fi

if command -v direnv >/dev/null 2>&1; then
  eval "$(direnv hook zsh)"
else
  echo "You seem to be missing direnv"
fi

if command -v mmake >/dev/null 2>&1; then
  alias make=mmake
else
  echo "You seem to be missing mmake"
fi

# GRE Word List
if [[ -d $HOME/.local/greWords/gre-cli-words ]]; then
  $HOME/.local/greWords/gre-cli-words/random_gre.sh $HOME/.local/greWords/gre-cli-words/custom_gre_word_list
  echo "\n"
else
  echo "You don't have gre-cli-words setup, try running getGREwords"
fi

# Nix
if [[ -d /nix ]]; then
  . $HOME/.nix-profile/etc/profile.d/nix.sh
else
  echo "You don't have nix installed"
fi

# Ripgrep

if ! command -v fzf >/dev/null 2>&1; then
  if ! command -v rg >/dev/null 2>&1; then
    echo "Please get ripgrep working"
  else
    export FZF_DEFAULT_COMMAND='rg --files --no-ignore --hidden --follow --glob "!.git/*"'
    export FZF_DEFAULT_OPTS="--extended --ansi --multi"
  fi
  echo "Please get fzf working"
fi


# Crossover Paths
###################

if [[ -d $HOME/cxoffice/bin ]]; then
  export PATH=$PATH:$HOME/cxoffice/bin
elif [[ -a /bin/crossover ]]; then
    # System installation, no path changes needed
else
  echo "You haven't installed Crossover system-wide or in $HOME/cxoffice"
fi

# XDG Paths
############

export XDG_DATA_HOME=$XDG_DATA_HOME:/usr/share
export XDG_DATA_DIRS=$XDG_DATA_HOME:/usr/share
export XDG_CONFIG_HOME="$HOME/.config"
