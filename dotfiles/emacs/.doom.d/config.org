#+TITLE: Literate doom-emacs config
#+AUTHOR: Rohit Goswami (HaoZeke) <rohit.goswami@aol.com>

** Table of Contents :noexport:TOC_3_gh:
  - [[#about][About]]
    - [[#about-that-toc][About that TOC..]]
  - [[#personal-information][Personal Information]]
  - [[#doom-emacs-stuff][Doom Emacs Stuff]]
    - [[#visual-tweaks][Visual tweaks]]
    - [[#kill-spellcheck][Kill spellcheck]]
  - [[#packages][Packages]]
    - [[#magit-aids][Magit Aids]]
  - [[#keybindings][Keybindings]]
    - [[#spacemacs-equivalency][Spacemacs Equivalency]]
  - [[#functions][Functions]]
    - [[#caveats][Caveats]]
  - [[#variables][Variables]]
    - [[#safe-variables][Safe variables]]

** About
This is a literate config file for [[https://github.com/hlissner/doom-emacs][doom-emacs]] by
~hlinssner~. This
is meant to be used with the =develop= branch.
Much of the basic setup is pulled from the [[https://github.com/gilbertw1/emacs-literate-starter][emacs literate
starter]] by =gilbertw1=.

*** About that TOC..
So as mentioned [[https:https://github.com/snosov1/toc-org/issues/35][here]] there is trouble when ~org-export~ tries to create files
while keeping the ~org-toc~ tag.

It's not really a problem since ~org-export~ actually generates a TOC for the
files anyway.

** Personal Information
Let's set some variables with basic user information.

#+BEGIN_SRC emacs-lisp
(setq user-full-name "Rohit Goswami (HaoZeke)"
      user-mail-address "rohit.goswami@aol.com")
#+END_SRC

** Doom Emacs Stuff
*** Visual tweaks
Honestly the basic font setting is simply not pretty enough.

#+BEGIN_SRC emacs-lisp
(setq doom-font (font-spec :family "Attribute Mono"
                           :size 20))
#+END_SRC

*** Kill spellcheck
This is really really really excruciatingly slow for LaTeX mode and maybe even
for other random buffers.

#+BEGIN_SRC emacs-lisp
(setq-hook! 'LaTeX-mode-hook +spellcheck-immediately nil)
#+END_SRC

** Packages
These should eventually go into a different module.
Each of these.

*** Magit Aids
**** Magit todos
Of course this is not really meant to be here..

#+BEGIN_SRC emacs-lisp
(def-package! magit-org-todos
  :mode "\\COMMIT_EDITMSG$"
  :commands (magit-org-todods magit-org-todos-autoinsert)
  :config
  (magit-org-todos-autoinsert))
#+END_SRC

**** Magithub
This is for sweet github integration.

#+BEGIN_SRC emacs-lisp
(def-package! magithub
  :after magit
  :commands (magithub-clone
             magithub-completion-enable)
  ;; :ensure t
  :config
  (magithub-feature-autoinject t)
  (setq
   magithub-clone-default-directory "$HOME/Git/Github/"
   magithub-dir (concat doom-etc-dir "magithub/")
   magithub-preferred-remote-method 'clone_url))
(def-package! evil-magit :after magit
  :init
  (setq evil-magit-state 'normal))
#+END_SRC

** Keybindings

*** Spacemacs Equivalency
**** Escape
I find the default ~jk~ evil escape key sequence to be distracting as I am
unable to navigate with one hand on the mouse anymore.

#+BEGIN_SRC emacs-lisp
(setq-default evil-escape-key-sequence "fd")
#+END_SRC

**** Kill buffer
Also it's inconvinient to have a key chord requiring two hands to close a
buffer.

#+BEGIN_SRC emacs-lisp
(map!
 (:leader
   (:prefix "b"
     :desc "Kill buffer" :n "d" #'kill-this-buffer)))
#+END_SRC


** Functions
This one is to generate pdfs whenever a buffer is saved. Mainly taken from
[[https:https://emacs.stackexchange.com/questions/9893/how-can-i-export-to-latex-every-time-i-save-an-org-mode-buffer][this stack exchange question]].

#+BEGIN_SRC emacs-lisp
(defun haozeke/org-save-and-export ()
  (interactive)
  (org-latex-export-to-pdf))
#+END_SRC

*** TODO Caveats
- Minted needs to be setup.
- There are really a lot of optimizations to the above.

** Variables
*** Safe variables
The problem is that ~packages.el~ isn't being produced by the clever little ugly
commit I tried so, this is a workaround to tangle *any* file to be produced in
~.el~ format in the same location.
**** Tangle
So adding the automatic tangling code doesn't mangle things up everytime you
open emacs. Basically this is adapted from [[https://www.reddit.com/r/emacs/comments/5d4hqq/using_babel_to_put_your_init_file_in_org/][this reddit thread]].

#+BEGIN_SRC emacs-lisp
(add-to-list 'safe-local-variable-values
             '(eval add-hook 'after-save-hook
	                (lambda () (org-babel-tangle))
	                nil t))
#+END_SRC

**** Export
This is a catch all for the eventual ~org-mode~ based multiple target exports.

#+BEGIN_SRC emacs-lisp
(add-to-list 'safe-local-variable-values
             '(eval (add-hook 'after-save-hook
	                'haozeke/org-save-and-export
	                nil t)))
#+END_SRC

**** TODO Caveats
- This actually forms it relative to the exact path. 
  (Gotta move it to the config folder)
- The actual code is much more elegant in every way possible.
- Seriously there has to be  a way to not have to do this.
  
