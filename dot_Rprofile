## From the ArchWiki
# The .First function is called after everything else in .Rprofile is executed
.First <- function() {
  # Print a welcome message
  if (interactive()){
    message("Welcome back ", Sys.getenv("USER"),"!\n","working directory is:", getwd())
  }
}

## Set CRAN Mirror:
local({
  r <- getOption("repos")
  r["CRAN"] <- "https://cloud.r-project.org/"
  options(repos = r)
})


### Disable q() to save workspace
## Create hidden environment
.env <- new.env()

## Define new q() function
.env$q <- function(save = "no", ...) {

  quit(save = save, ...)

}

## Attach hidden environment
attach(.env, warn.conflicts = FALSE)

## Options
options(digits = 12)                                          # Number of digits to print. Default is 7, max is 15
options(scipen = 2)                                           # Penalty applied to inhibit the use of scientific notation
local({
  n <- max(parallel::detectCores() - 2L, 1L)                  # Detect the number of cores available for use in parallelisation
  options(Ncpus = n)                                          # Parallel package installation in install.packages()
  options(mc.cores =  n)                                      # Parallel apply-type functions via 'parallel' package
})

## Some more options, partially kanged from https://gist.github.com/ijlyttle/dee4a89c8528cd4a0a319bb7b8cdd51a
  options(
    # if you submit a package to CRAN using devtools,
    # it will send an email on your behalf
    # - this the name it uses to sign the email
    devtools.name = "Rohit Goswami",
    # when you create a package using usethis::create_package(), this
    # is used to populate the Author field in the DESCRIPTION file
    # - an ORCID can be useful, but it is not mandatory: https://orcid.org/
    usethis.description = list(
      `Authors@R` = 'person("Rohit", "Goswami",
                            email = "rgoswami@ieee.org",
                            role = c("aut", "cre"),
                            comment = c(ORCID = "0000-0002-2393-8056"))'
    ),
    # depends on your situation to choose ssh or https:
    # - https a useful default
    # - if you also use GitHub Enterprise, ssh can be useful
    usethis.protocol = "https"
  )
# Emacs Stuff (cross platform)
# Local Variables:
# mode: r
# End:
